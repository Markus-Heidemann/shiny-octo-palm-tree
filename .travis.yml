sudo:               true
dist:               xenial
language:           cpp

secure: "Q3tMNn/Op1bob5pJtKGpZTwRA/Z8vw1n/tx923Rrx0ZDrYaqxm3KaQrylw6TfGLSHs+sY3vnnRxZoErLn4E9/+Je0MVsu1wdwOtqIDxft3dT6E1JQHJDW/2C+KJAM/HTPB37csafQAWEYzz+KInN1qxCh0n4aqWG8bqkey2Sws9v1Va5EqSB3uPc6rGDy3+/TzE0vNGN2CGO/RYUhmY2EHgI67FzLFMSCOzq6FQok+JMzMsxFXTiZWtuHsmJRO9LoPUuZUnGoapvvdFYRbHapNkndLNUVloXpKAQLMLHSsBInQmPRR3xSa5NvmtOgoOarsmVUDYQrjZta1iAqFKUQC/zipCd240li9xlULzp0naeiYNQvPa67amDn1Oc/vE4rI71HRtk1TW7Wd+R/A9iKQYsKZ5jNMqlvc16TegoKBhELMOEBj6dH6G0J6x3VM5P0xubBRNqc4GcFqU4xsmS5w8Mv7N0a6e9PDMrIRHYgRJI+1QfV4buWO0LDEOlfv7aCOKrztdipOc13yVLC7D6pcB0Sfqt2ELlUB52iFrdVOoY1CdoU4IPDZc5GTgnVQt0MTptmsRJpBxzj2b5L8nLVvlzIbNmyA1nEQtsyqdITX+I/74keZ+WyLt3i6wWrgDDR64Kuk/RsxMw5a3Lpur8mWHt3dxdLd+TvCGev+eHgzU="

branches:
  only:
  - master

matrix:
  include:
    - compiler:     gcc
      env:
          - CMAKE_VERSION=3.14.2
          - CODE_COVERAGE=true
    - compiler:     gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - ggcov
      env:
          - COMPILERCXX=g++-8
          - COMPILERC=gcc-8
          - CMAKE_VERSION=3.14.2
    - compiler:     clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
          - COMPILERC=clang
          - COMPILERCXX=clang++
          - CLANGV=8.0.0
          - CMAKE_VERSION=3.14.2
          - RUNCLANGTIDY=TRUE

before_install:
  - sudo apt-get update -qq
  - sudo apt purge --auto-remove cmake
  - mkdir $HOME/cmake
  - wget https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz -O $HOME/cmake.tar.gz
  - tar xzf $HOME/cmake.tar.gz -C $HOME/cmake --strip-components 1
  - export PATH=$HOME/cmake/bin:$PATH
  - mkdir $HOME/clang+llvm
  - export PATH=$HOME/clang+llvm/bin:$HOME/clang+llvm/share/clang:$PATH
  - if [ -n "$CLANGV" ]; then wget http://releases.llvm.org/$CLANGV/clang+llvm-$CLANGV-x86_64-linux-gnu-ubuntu-16.04.tar.xz -O
   $HOME/clang+llvm.tar.xz; fi
  - if [ -n "$CLANGV" ]; then tar xf $HOME/clang+llvm.tar.xz -C $HOME/clang+llvm --strip-components 1; fi
  - if [ -n "$CODE_COVERAGE" ]; then pip install --user cpp-coveralls; fi

script:
  - python vendor/run-clang-format/run-clang-format.py -r skeleton tasks || travis_terminate 1;
  - mkdir build
  - cd build
  - cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=true -DCMAKE_CXX_COMPILER=$COMPILERCXX -DCMAKE_C_COMPILER=$COMPILERC -DCMAKE_INSTALL_PREFIX=/tmp/ ..
  - make
  - make test
  - cd ..
  - if [ -n "$RUNCLANGTIDY" ]; then cp build/compile_commands.json .; fi
  - if [ -n "$RUNCLANGTIDY" ]; then run-clang-tidy.py -checks=bugprone-*,-cppcoreguidelines-*,clang-analyzer-cplusplus*,modernize-*,performance-*,portability-* -header-filter='tasks,skeleton'; fi

after_success:
  - if [ -n "$CODE_COVERAGE" ]; then coveralls --root . --build-root build --exclude vendor; fi
